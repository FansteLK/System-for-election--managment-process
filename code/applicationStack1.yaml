version: '3'

services:
  applicationDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - dbdataapp:/var/lib/mysql

    networks:
      - adminNet
      - electionNet
  adminer:
    image: adminer
    ports:
    - 8080:8080
    networks:
      - adminNet
  admin:
    image: admin
    environment:
      - TZ= Europe/Belgrade
      - DATABASE_URL=applicationDB

    ports:
      - 5001:5001
    networks:
      - adminNet
  applicationDBMigration:
    image: electiondbmigration
    environment:
      - DATABASE_URL=applicationDB
    networks:
      - adminNet
  mod:
    image: mod
    environment:
      - TZ= Europe/Belgrade
      - DATABASE_URL=applicationDB

    ports:
      - 5004:5004
    networks:
      - electionNet
  votingstation:
    image: votingstation
    ports:
      - 5003:5003
    networks:
      - votingNet
    deploy:
      replicas:
        3
  redis:
    image: redis
    ports:
      - 6379:6379
    networks:
      - redisNet
      - votingNet
  dameon:
    image: dameon
    environment:
      - DATABASE_URL=applicationDB
      - TZ= Europe/Belgrade
    networks:
      - electionNet
      - redisNet
volumes:
     dbdataapp:

networks:
  electionNet:
    driver:
      overlay
  redisNet:
    driver:
      overlay
  votingNet:
    driver:
      overlay
  adminNet:
    driver:
      overlay


    # docker swarm init
    # cp absolute path  stack.yaml
    #docker stack deploy --compose-file stack.yaml ime
    #docker service ls
    #docker stack rm
    #python main.py --type all --authentication-address http://127.0.0.1:5002 --jwt-secret JWT_SECRET_KEY --roles-field roles --administrator-role admin --user-role user --administrator-address http://127.0.0.1:5001 --station-address http://127.0.0.1:5003 --with-authentication >> output.txt
